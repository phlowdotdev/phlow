{
    "components": {
        "responses": {
            "ValidationError": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "NotFound": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                },
                "description": "Resource not found"
            }
        },
        "schemas": {
            "User": {
                "required": [
                    "id",
                    "name",
                    "email"
                ],
                "additionalProperties": false,
                "description": "User resource",
                "properties": {
                    "name": {
                        "minLength": 2,
                        "maxLength": 50,
                        "pattern": "^[a-zA-ZÀ-ÿ\s]+$",
                        "type": "string"
                    },
                    "age": {
                        "maximum": 120,
                        "description": "User age in years (optional)",
                        "type": "integer",
                        "minimum": 0
                    },
                    "id": {
                        "$ref": "#/components/schemas/UserId"
                    },
                    "phone": {
                        "type": "string",
                        "pattern": "^\\+?[1-9]\\d{1,14}$",
                        "description": "User phone number (optional)"
                    },
                    "email": {
                        "format": "email",
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                    }
                },
                "type": "object"
            },
            "UserId": {
                "format": "uuid",
                "description": "The unique identifier of a user",
                "type": "string"
            },
            "Error": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "details": {
                        "type": "array",
                        "description": "Arbitrary validation or domain details",
                        "items": {
                            "type": "object"
                        }
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "NewUser": {
                "type": "object",
                "additionalProperties": false,
                "description": "Payload to create a new user",
                "required": [
                    "name",
                    "email"
                ],
                "properties": {
                    "name": {
                        "maxLength": 50,
                        "pattern": "^[a-zA-ZÀ-ÿ\s]+$",
                        "minLength": 2,
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$"
                    },
                    "age": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 120
                    },
                    "phone": {
                        "pattern": "^\+?[1-9]\d{1,14}$",
                        "type": "string"
                    }
                }
            },
            "UpdateUser": {
                "minProperties": 1,
                "description": "Payload to update an existing user",
                "type": "object",
                "properties": {
                    "name": {
                        "minLength": 2,
                        "maxLength": 50,
                        "pattern": "^[a-zA-ZÀ-ÿ\s]+$",
                        "type": "string"
                    },
                    "phone": {
                        "pattern": "^\+?[1-9]\d{1,14}$",
                        "type": "string"
                    },
                    "age": {
                        "minimum": 0,
                        "type": "integer",
                        "maximum": 120
                    }
                },
                "additionalProperties": true
            }
        },
        "parameters": {
            "UserIdPath": {
                "name": "userId",
                "in": "path",
                "schema": {
                    "$ref": "#/components/schemas/UserId"
                },
                "required": true
            }
        }
    },
    "servers": [
        {
            "url": "https://api.example.com/v1"
        }
    ],
    "info": {
        "version": "1.0.0",
        "title": "Test API"
    },
    "tags": [
        {
            "name": "Users",
            "description": "User management endpoints"
        }
    ],
    "paths": {
        "/users": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewUser"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "responses": {
                    "201": {
                        "description": "User created",
                        "headers": {
                            "Location": {
                                "description": "URI of the created resource",
                                "schema": {
                                    "format": "uri",
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    }
                },
                "operationId": "createUser"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "A list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    }
                },
                "tags": [
                    "Users"
                ],
                "operationId": "listUsers",
                "summary": "List all users"
            }
        },
        "/users/{userId}": {
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUser"
                            }
                        }
                    },
                    "required": true
                },
                "summary": "Update user by ID",
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "200": {
                        "description": "User updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "operationId": "updateUser",
                "tags": [
                    "Users"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/UserIdPath"
                }
            ],
            "delete": {
                "operationId": "deleteUser",
                "summary": "Delete user by ID",
                "tags": [
                    "Users"
                ],
                "responses": {
                    "204": {
                        "description": "User deleted"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": "User found"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        }
    },
    "openapi": "3.1.0"
}