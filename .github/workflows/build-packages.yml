name: Build and Deploy Packages

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write
  actions: read
  checks: read

jobs:
  build_darwin:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Make scripts executable
        run: chmod +x ./scripts/*.sh

      - name: Run packages script
        run: ./scripts/build-packages.sh

      - name: Upload Mac packages
        uses: actions/upload-artifact@v4
        with:
          name: darwin-packages
          path: ./packages
          retention-days: 1

  build_linux_amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Make scripts executable
        run: chmod +x ./scripts/*.sh

      - name: Run packages script
        run: TARGET=x86_64-unknown-linux-gnu ./scripts/build-packages.sh

      - name: Upload Linux amd64 packages
        uses: actions/upload-artifact@v4
        with:
          name: linux-amd64-packages
          path: ./packages
          retention-days: 1
  
  build_linux_aarch64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Make scripts executable
        run: chmod +x ./scripts/*.sh

      - name: Run packages script
        run: TARGET=aarch64-unknown-linux-gnu ./scripts/build-packages.sh

      - name: Upload Linux aarch64 packages
        uses: actions/upload-artifact@v4
        with:
          name: linux-aarch64-packages
          path: ./packages
          retention-days: 1


  deploy:
    needs: 
      - build_darwin
      - build_linux_amd64
      - build_linux_aarch64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Make scripts executable
        run: chmod +x ./scripts/*.sh

      - name: Create raw directory
        run: mkdir -p raw

      - name: Download Mac packages
        uses: actions/download-artifact@v4
        with:
          name: darwin-packages
          path: darwin-packages

      - name: Download Ubuntu packages
        uses: actions/download-artifact@v4
        with:
          name: linux-amd64-packages
          path: linux-amd64-packages

      - name: Download Linux musl packages
        uses: actions/download-artifact@v4
        with:
          name: linux-aarch64-packages
          path: linux-aarch64-packages

      - name: Move artifacts to raw directory
        run: |
          cp darwin-packages/*.tar.gz raw/ || true
          cp linux-amd64-packages/*.tar.gz raw/ || true
          cp linux-aarch64-packages/*.tar.gz raw/ || true

      - name: Run resolver script
        run: ./scripts/resolver-packages-dir.sh

      - name: Setup Git for packages repo
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Clone packages repository
        env:
          TOKEN: ${{ secrets.PHLOW_PACKAGES_PAT }}
        run: |
          git clone https://x-access-token:${TOKEN}@github.com/phlowdotdev/phlow-packages.git

      - name: Update packages repository
        env:
          GH_TOKEN: ${{ secrets.GH_PAT  }} # necess√°rio para o `gh pr create`
        run: |
          cp -R packages/* phlow-packages/packages/
          cd phlow-packages
          git checkout -b update-packages-${{ github.run_id }}
          git add .
          git commit -m "Update packages from workflow run ${{ github.run_id }}" || echo "No changes to commit"
          git push --set-upstream origin update-packages-${{ github.run_id }}
          gh pr create --title "Update packages from workflow run ${{ github.run_id }}" --body "Automated package update from workflow run." --base main --head update-packages-${{ github.run_id }}
