modules:
  http_server:
    port: 3000
    host: "0.0.0.0"
    # CORS configuration - enables cross-origin requests
    cors:
      origins:
        - "http://localhost:3000"
        - "http://localhost:5173" # Vite dev server
        - "http://127.0.0.1:5500" # Live Server
        - "https://myapp.com"     # Production domain
      methods:
        - "GET"
        - "POST"
        - "PUT"
        - "PATCH"
        - "DELETE"
        - "OPTIONS"
      headers:
        - "Content-Type"
        - "Authorization"
        - "X-Requested-With"
        - "X-Custom-Header"
      credentials: true
      max_age: 86400 # 24 hours cache for preflight
    
  logger:

steps:
  - module: logger
    data:
      message: "API CORS Server starting on port 3000 (CORS enabled for cross-origin requests)"
      level: "info"
    
  # Users resource endpoints
  - module: http_server
    condition: '{{ data.method == "GET" and data.path == "/api/users" }}'
    data:
      status_code: 200
      headers:
        Content-Type: "application/json"
      body:
        users:
          - id: 1
            name: "John Doe"
            email: "john@example.com"
            role: "admin"
          - id: 2
            name: "Jane Smith"
            email: "jane@example.com"
            role: "user"
          - id: 3
            name: "Bob Wilson"
            email: "bob@example.com"
            role: "user"

  - module: http_server
    condition: '{{ data.method == "GET" and data.path.matches("^/api/users/(\d+)$") }}'
    data:
      status_code: 200
      headers:
        Content-Type: "application/json"
      body:
        user:
          id: '{{ data.path_params.id }}'
          name: "User {{ data.path_params.id }}"
          email: "user{{ data.path_params.id }}@example.com"
          role: "user"

  - module: http_server  
    condition: '{{ data.method == "POST" and data.path == "/api/users" }}'
    data:
      status_code: 201
      headers:
        Content-Type: "application/json"
      body:
        message: "User created successfully"
        user:
          id: 4
          name: '{{ data.body.name }}'
          email: '{{ data.body.email }}'
          role: '{{ data.body.role | default("user") }}'

  - module: http_server
    condition: '{{ data.method == "PUT" and data.path.matches("^/api/users/(\d+)$") }}'
    data:
      status_code: 200
      headers:
        Content-Type: "application/json"
      body:
        message: "User updated successfully"
        user:
          id: '{{ data.path_params.id }}'
          name: '{{ data.body.name }}'
          email: '{{ data.body.email }}'
          role: '{{ data.body.role | default("user") }}'

  - module: http_server
    condition: '{{ data.method == "DELETE" and data.path.matches("^/api/users/(\d+)$") }}'
    data:
      status_code: 204

  # Posts resource endpoints
  - module: http_server
    condition: '{{ data.method == "GET" and data.path == "/api/posts" }}'
    data:
      status_code: 200
      headers:
        Content-Type: "application/json"
      body:
        posts:
          - id: 1
            title: "Getting Started with Phlow"
            content: "Learn how to create REST APIs with Phlow"
            author_id: 1
            created_at: "2024-01-15T10:00:00Z"
          - id: 2
            title: "Advanced CORS Configuration"
            content: "Master CORS settings for secure cross-origin requests"
            author_id: 2
            created_at: "2024-01-16T14:30:00Z"

  - module: http_server
    condition: '{{ data.method == "POST" and data.path == "/api/posts" }}'
    data:
      status_code: 201
      headers:
        Content-Type: "application/json"
      body:
        message: "Post created successfully"
        post:
          id: 3
          title: '{{ data.body.title }}'
          content: '{{ data.body.content }}'
          author_id: '{{ data.body.author_id }}'
          created_at: "2024-01-17T09:00:00Z"

  # Status and health check endpoints
  - module: http_server
    condition: '{{ data.method == "GET" and data.path == "/api/status" }}'
    data:
      status_code: 200
      headers:
        Content-Type: "application/json"
      body:
        status: "healthy"
        cors_enabled: true
        cors_origins: ["http://localhost:3000", "http://localhost:5173", "http://127.0.0.1:5500", "https://myapp.com"]
        message: "API server is running with CORS enabled"
        timestamp: "{{ now() }}"

  # CORS preflight test endpoint
  - module: http_server
    condition: '{{ data.method == "GET" and data.path == "/api/cors-test" }}'
    data:
      status_code: 200
      headers:
        Content-Type: "application/json"
        X-Custom-Header: "CORS-enabled-response"
      body:
        message: "This endpoint supports CORS requests"
        origin: '{{ data.headers.origin | default("not-provided") }}'
        method: '{{ data.method }}'
        headers_received: '{{ data.headers | keys }}'

  # Default response for unhandled requests
  - module: http_server
    data:
      status_code: 404
      headers:
        Content-Type: "application/json"
      body:
        error: "Not Found"
        message: "The requested endpoint does not exist"
        available_endpoints:
          - "GET /api/users"
          - "POST /api/users"
          - "GET /api/users/{id}"
          - "PUT /api/users/{id}"
          - "DELETE /api/users/{id}"
          - "GET /api/posts"
          - "POST /api/posts"
          - "GET /api/status"
          - "GET /api/cors-test"
