###############################################################################
# Dockerfile para o Phlow Runtime
###############################################################################
# Etapa de build com Rust
FROM rust:latest AS builder

# Instala dependências de build (opcional se seu projeto não precisar de libs extras)
RUN apt-get update && apt-get install -y pkg-config libssl-dev

# Define diretório de trabalho
WORKDIR /app

# Copia o código fonte
COPY . .

# Compila o binário com uma versão compatível do glibc (bullseye usa glibc 2.31)
RUN cargo build --release -p phlow-runtime


###############################################################################
# Dockerfile para o Phlow Runtime
###############################################################################
# Etapa final com imagem enxuta baseada no Debian Bullseye (glibc 2.31)
FROM rust:latest AS runtime

# Instala apenas as dependências necessárias para o binário funcionar
# RUN apt-get update && apt-get install -y \
#     ca-certificates \
#     libssl1.1 \
#     && rm -rf /var/lib/apt/lists/*

# Cria diretório de app
WORKDIR /app

# Copia apenas o binário gerado
COPY --from=builder /app/target/release/phlow /app/phlow

# Dá permissão de execução
RUN chmod +x /app/phlow

# Define variável de ambiente caso precise
ENV PHLOW_LOG=info

# Define o binário como entrypoint
ENTRYPOINT ["/app/phlow"]
