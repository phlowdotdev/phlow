name: Authorization
description: Handles user authentication and authorization
modules:
  - module: http_server
    with:
      port: 3000
  - module: jwt
    with:
      secret: envs.JWT_SECRET

main: http_server
steps:
  - assert: main.method == "POST" && main.path == "/"
    then:
      - jwt:
          action: create
          data: main.body
          expires_in: 30 * 24 * 60 * 60
      - return:
          status_code: 201
          body: payload

  - assert: main.method == "GET" && main.path == "/" && !is_empty(main.headers.authorization)
    then:
      - assert: main.headers.authorization.starts_with("Bearer ") || main.headers.authorization.starts_with("bearer ")
        then:
          payload: main.headers.authorization.slice(7)
        else:
          payload: main.headers.authorization
      - assert: !is_empty(payload)
      - jwt:
          action: verify
          token: payload

      - assert: payload.valid
        then:
          return:
            status_code: 200
            body: payload
        else:
          return:
            status_code: 400
            body: payload

  - return:
      status_code: 404
      body:
        error: "Not Found"
        message: "The requested resource could not be found."
