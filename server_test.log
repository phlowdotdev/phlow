[2025-08-12T23:34:54Z DEBUG phlow] Starting Phlow Runtime
[2025-08-12T23:34:54Z INFO  phlow::loader] Downloading modules...
[2025-08-12T23:34:55Z INFO  phlow::loader] Module http_server (latest) already exists at phlow_packages/http_server/module.so, skipping download
[2025-08-12T23:34:55Z INFO  phlow::loader] Module cache (latest) already exists at phlow_packages/cache/module.so, skipping download
[2025-08-12T23:34:55Z INFO  phlow::loader] All modules downloaded and extracted successfully
[2025-08-12T23:34:55Z DEBUG phlow::loader] update_info
[2025-08-12T23:34:55Z DEBUG phlow::loader] module info loaded
[2025-08-12T23:34:55Z DEBUG phlow::loader] module info loaded
[2025-08-12T23:34:55Z DEBUG phlow] Run application
[2025-08-12T23:34:55Z DEBUG phlow::runtime] Module http_server loaded with name "http_server" and version "latest"
[2025-08-12T23:34:55Z DEBUG phlow::loader] Find phlow_packages/http_server/module.so...
[2025-08-12T23:34:55Z INFO  phlow::loader] ðŸ§ª Load Module: http_server (latest), in phlow_packages/http_server/module.so
[2025-08-12T23:34:55Z INFO  phlow::loader] Loading binary module: phlow_packages/http_server/module.so
[2m2025-08-12T23:34:55.007875Z[0m [34mDEBUG[0m [2mphlow_sdk::otel[0m[2m:[0m PHLOW_OTEL is set to false, using default subscriber
[2m2025-08-12T23:34:55.012446Z[0m [34mDEBUG[0m [2mlog[0m[2m:[0m Loading OpenAPI spec from content: {"tags": [{"description": "User management endpoints","name": "Users"}],"servers": [{"url": "https://api.example.com/v1"}],"info": {"version": "1.0.0","title": "Test API"},"paths": {"/users": {"post": {"tags": ["Users"],"operationId": "createUser","requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/NewUser"}}},"required": true},"summary": "Create a new user","responses": {"201": {"headers": {"Location": {"schema": {"type": "string","format": "uri"},"description": "URI of the created resource"}},"content": {"application/json": {"schema": {"$ref": "#/components/schemas/User"}}},"description": "User created"},"400": {"$ref": "#/components/responses/ValidationError"}}},"get": {"responses": {"400": {"$ref": "#/components/responses/ValidationError"},"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/User"},"type": "array"}}},"description": "A list of users"}},"operationId": "listUsers","summary": "List all users","tags": ["Users"]}},"/users/{userId}": {"put": {"operationId": "updateUser","requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateUser"}}},"required": true},"tags": ["Users"],"responses": {"400": {"$ref": "#/components/responses/ValidationError"},"404": {"$ref": "#/components/responses/NotFound"},"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/User"}}},"description": "User updated"}},"summary": "Update user by ID"},"get": {"tags": ["Users"],"summary": "Get user by ID","operationId": "getUser","responses": {"404": {"$ref": "#/components/responses/NotFound"},"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/User"}}},"description": "User found"}}},"parameters": [{"$ref": "#/components/parameters/UserIdPath"}],"delete": {"operationId": "deleteUser","tags": ["Users"],"summary": "Delete user by ID","responses": {"404": {"$ref": "#/components/responses/NotFound"},"204": {"description": "User deleted"}}}}},"openapi": "3.1.0","components": {"schemas": {"NewUser": {"required": ["name","email"],"description": "Payload to create a new user","additionalProperties": false,"properties": {"age": {"minimum": 0,"type": "integer","maximum": 120},"email": {"type": "string","format": "email"},"phone": {"maxLength": 20,"pattern": "^\+?[1-9]\d[\d \-\(\)]{7,15}$","type": "string","minLength": 8},"name": {"minLength": 2,"type": "string","maxLength": 50,"pattern": "^[a-zA-ZÃ€-Ã¿ ]+$"}},"type": "object"},"UpdateUser": {"additionalProperties": true,"description": "Payload to update an existing user","type": "object","properties": {"age": {"type": "integer","minimum": 0,"maximum": 120},"name": {"pattern": "^[a-zA-ZÃ€-Ã¿ ]+$","maxLength": 50,"minLength": 2,"type": "string"},"phone": {"minLength": 8,"type": "string","maxLength": 20,"pattern": "^\+?[1-9]\d[\d \-\(\)]{7,15}$"}},"minProperties": 1},"Error": {"additionalProperties": false,"required": ["code","message"],"type": "object","properties": {"details": {"type": "array","description": "Arbitrary validation or domain details","items": {"type": "object"}},"message": {"type": "string"},"code": {"type": "string"}}},"UserId": {"description": "The unique identifier of a user (email address in this implementation)","type": "string"},"User": {"properties": {"phone": {"description": "User phone number (optional)","maxLength": 20,"minLength": 8,"type": "string","pattern": "^\+?[1-9]\d[\d \-\(\)]{7,15}$"},"age": {"maximum": 120,"description": "User age in years (optional)","type": "integer","minimum": 0},"id": {"$ref": "#/components/schemas/UserId"},"name": {"pattern": "^[a-zA-ZÃ€-Ã¿ ]+$","type": "string","minLength": 2,"maxLength": 50},"email": {"format": "email","type": "string"}},"type": "object","required": ["id","name","email"],"additionalProperties": false,"description": "User resource"}},"responses": {"ValidationError": {"description": "Validation error","content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}},"NotFound": {"description": "Resource not found","content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}},"parameters": {"UserIdPath": {"required": true,"in": "path","name": "userId","schema": {"$ref": "#/components/schemas/UserId"}}}}}    
[2m2025-08-12T23:34:55.013746Z[0m [32m INFO[0m [2mlog[0m[2m:[0m OpenAPI validator loaded successfully    
[2m2025-08-12T23:34:55.013883Z[0m [31mERROR[0m [2mhttp_server[0m[2m:[0m Error in plugin: Os { code: 98, kind: AddrInUse, message: "Address already in use" }
[2025-08-12T23:34:55Z ERROR phlow] Runtime Error: ModuleRegisterError
