"use strict";(self.webpackChunkphlow_docs=self.webpackChunkphlow_docs||[]).push([[3654],{8453:(e,o,r)=>{r.d(o,{R:()=>s,x:()=>a});var t=r(6540);const n={},i=t.createContext(n);function s(e){const o=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),t.createElement(i.Provider,{value:o},e.children)}},9805:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"remote-projects","title":"Running Remote Projects","description":"Phlow supports running remote projects directly from URLs or Git repositories. You can pass a .git, .zip, or .tar.gz source \u2014 Phlow will automatically download, extract (if needed), and execute the flow from a main.yaml.","source":"@site/docs/remote-projects.md","sourceDirName":".","slug":"/remote-projects","permalink":"/docs/remote-projects","draft":false,"unlisted":false,"editUrl":"https://github.com/phlowdotdev/phlow/tree/main/docs/docs/remote-projects.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8,"title":"Running Remote Projects"},"sidebar":"docsSidebar","previous":{"title":"OpenTelemetry","permalink":"/docs/opentelemetry"},"next":{"title":"Environment Variables","permalink":"/docs/environment"}}');var n=r(4848),i=r(8453);const s={sidebar_position:8,title:"Running Remote Projects"},a=void 0,l={},c=[{value:"Git branch selector",id:"git-branch-selector",level:3},{value:"Custom SSH Key",id:"custom-ssh-key",level:3},{value:"Authorization Header for ZIP/GZIP Downloads",id:"authorization-header-for-zipgzip-downloads",level:3},{value:"Inner directory selector (ZIP/GZIP)",id:"inner-directory-selector-zipgzip",level:3},{value:"Auto-detection of inner folder",id:"auto-detection-of-inner-folder",level:3}];function d(e){const o={code:"code",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(o.p,{children:["Phlow supports running remote projects directly from URLs or Git repositories. You can pass a ",(0,n.jsx)(o.code,{children:".git"}),", ",(0,n.jsx)(o.code,{children:".zip"}),", or ",(0,n.jsx)(o.code,{children:".tar.gz"})," source \u2014 Phlow will automatically download, extract (if needed), and execute the flow from a ",(0,n.jsx)(o.code,{children:"main.yaml"}),"."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-bash",children:"# Git via SSH\nphlow git@github.com:lowcarboncode/phlow-mirror-request.git \n\n# Git via HTTPS\nphlow https://github.com/lowcarboncode/phlow-mirror-request.git\n\n# ZIP archive\nphlow https://github.com/lowcarboncode/phlow-mirror-request/archive/refs/heads/main.zip\n\n# Tarball (GZIP)\nphlow https://github.com/lowcarboncode/phlow-mirror-request/tarball/main\n"})}),"\n",(0,n.jsx)(o.h3,{id:"git-branch-selector",children:"Git branch selector"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-bash",children:"phlow git@github.com:lowcarboncode/phlow-mirror-request.git#develop\n"})}),"\n",(0,n.jsx)(o.h3,{id:"custom-ssh-key",children:"Custom SSH Key"}),"\n",(0,n.jsx)(o.p,{children:"By default, Phlow uses the SSH key at ~/.ssh/id_rsa to authenticate Git over SSH.\nTo override this path, set the environment variable:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-bash",children:"export PHLOW_REMOTE_ID_RSA_PATH=/path/to/your/private_key\n"})}),"\n",(0,n.jsx)(o.h3,{id:"authorization-header-for-zipgzip-downloads",children:"Authorization Header for ZIP/GZIP Downloads"}),"\n",(0,n.jsxs)(o.p,{children:["When downloading ",(0,n.jsx)(o.code,{children:".zip"})," or ",(0,n.jsx)(o.code,{children:".tar.gz"})," files that require authentication (e.g., from a private server), you can use the environment variable below to send an ",(0,n.jsx)(o.code,{children:"Authorization"})," header in the request:"]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-bash",children:'export PHLOW_REMOTE_HEADER_AUTHORIZATION="Bearer your_token_here"\n'})}),"\n",(0,n.jsx)(o.p,{children:"Phlow will include this header when performing the HTTP request for ZIP or GZIP downloads."}),"\n",(0,n.jsx)(o.h3,{id:"inner-directory-selector-zipgzip",children:"Inner directory selector (ZIP/GZIP)"}),"\n",(0,n.jsxs)(o.p,{children:["If you are downloading a ZIP or GZIP archive and want to specify which folder inside the archive contains your flow, you can add ",(0,n.jsx)(o.code,{children:"#folder_name"})," at the end:"]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-bash",children:"phlow https://github.com/lowcarboncode/phlow-mirror-request/archive/refs/heads/main.zip#phlow-mirror-request\n"})}),"\n",(0,n.jsx)(o.h3,{id:"auto-detection-of-inner-folder",children:"Auto-detection of inner folder"}),"\n",(0,n.jsxs)(o.p,{children:["If you don\u2019t specify a folder name and the ZIP/GZIP file contains only one directory, Phlow will automatically treat it as the root and search for a ",(0,n.jsx)(o.code,{children:"main.yaml"})," inside it."]}),"\n",(0,n.jsx)(o.p,{children:"If the archive contains multiple folders or any loose files in the root and no folder is specified, Phlow will return an error."})]})}function h(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);