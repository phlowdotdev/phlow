"use strict";(self.webpackChunkphlow_docs=self.webpackChunkphlow_docs||[]).push([[4228],{2644:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"phlow-structure/modules","title":"Modules (modules.yaml)","description":"Modules define components or services needed by the flow.","source":"@site/docs/phlow-structure/modules.md","sourceDirName":"phlow-structure","slug":"/phlow-structure/modules","permalink":"/docs/phlow-structure/modules","draft":false,"unlisted":false,"editUrl":"https://github.com/phlowdotdev/phlow/tree/main/site/docs/phlow-structure/modules.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Modules (modules.yaml)"},"sidebar":"docsSidebar","previous":{"title":"Main Flow Structure (main.yaml)","permalink":"/docs/phlow-structure/main"},"next":{"title":"Steps","permalink":"/docs/phlow-structure/steps"}}');var r=s(4848),i=s(8453);const o={sidebar_position:3,title:"Modules (modules.yaml)"},l=void 0,d={},a=[{value:"Structure",id:"structure",level:2},{value:"With scripts",id:"with-scripts",level:2},{value:"Good practice",id:"good-practice",level:2},{value:"Example of <code>modules.yaml</code>:",id:"example-of-modulesyaml",level:4},{value:"Example of <code>main.yaml</code> referencing <code>modules.yaml</code>:",id:"example-of-mainyaml-referencing-modulesyaml",level:4}];function c(e){const n={code:"code",h2:"h2",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Modules define components or services needed by the flow."}),"\n",(0,r.jsx)(n.h2,{id:"structure",children:"Structure"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"module"})}),(0,r.jsx)(n.td,{children:"The module's name."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"version"})}),(0,r.jsx)(n.td,{children:"The module's version."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"with"})}),(0,r.jsx)(n.td,{children:"Configuration for the module."})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Example CLI module definition:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"- module: cli\n  version: latest\n  with:\n    additional_args: false\n    args: \n      - name: name\n        description: Student name\n        index: 1\n        type: string\n        required: true\n      - name: age\n        description: Student age\n        index: 2\n        type: number\n        required: true\n      - name: force\n        long: force\n        description: Force assertion\n        short: f\n        type: boolean\n        default: false\n"})}),"\n",(0,r.jsx)(n.h2,{id:"with-scripts",children:"With scripts"}),"\n",(0,r.jsxs)(n.p,{children:["Each module can accept any property within ",(0,r.jsx)(n.code,{children:"with"}),". It is also possible to execute ",(0,r.jsx)(n.code,{children:"!phs"})," within ",(0,r.jsx)(n.code,{children:"with"})," to run scripts or declare environment variables, as shown in the example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"- module: postgres\n  version: latest\n  with:\n    host: !phs envs.POSTGRES_HOST ?? 'localhost'\n    user: !phs envs.POSTGRES_USER ?? 'postgres'\n    password: !phs envs.POSTGRES_PASSWORD\n"})}),"\n",(0,r.jsx)(n.h2,{id:"good-practice",children:"Good practice"}),"\n",(0,r.jsxs)(n.p,{children:["A good practice is to keep the modules in a separate file, such as ",(0,r.jsx)(n.code,{children:"modules.yaml"}),", and reference them in the ",(0,r.jsx)(n.code,{children:"main.yaml"})," using ",(0,r.jsx)(n.code,{children:"!include modules.yaml"}),". This helps maintain organized and easily maintainable code."]}),"\n",(0,r.jsxs)(n.h4,{id:"example-of-modulesyaml",children:["Example of ",(0,r.jsx)(n.code,{children:"modules.yaml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"- module: cli\n  version: latest\n  with:\n    additional_args: false\n    args: \n      - name: name\n        description: Student name\n        index: 1\n        type: string\n        required: true\n      - name: age\n        description: Student age\n        index: 2\n        type: number\n        required: true\n      - name: force\n        long: force\n        description: Force assertion\n        short: f\n        type: boolean\n        default: false\n- module: postgres\n  version: latest\n  with:\n    host: !phs envs.POSTGRES_HOST ?? 'localhost'\n    user: !phs envs.POSTGRES_USER ?? 'postgres'\n    password: !phs envs.POSTGRES_PASSWORD\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"example-of-mainyaml-referencing-modulesyaml",children:["Example of ",(0,r.jsx)(n.code,{children:"main.yaml"})," referencing ",(0,r.jsx)(n.code,{children:"modules.yaml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"modules: !include modules.yaml\nsteps:\n  - step: initialize\n    description: Initialize the environment\n  - step: run-cli\n    module: cli\n    with:\n      args:\n        - name: input\n          description: Input data\n          index: 1\n          type: string\n          required: true\n  - step: setup-database\n    module: postgres\n    with:\n      database: my_database\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var t=s(6540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);