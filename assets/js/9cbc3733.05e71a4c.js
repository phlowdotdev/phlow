"use strict";(self.webpackChunkphlow_docs=self.webpackChunkphlow_docs||[]).push([[2254],{5807:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"phlow-structure/introduction","title":"Introduction","description":"Phlow is a modular runtime for building backends, automations, and orchestrations using YAML to define flows. Each flow is descriptive and structured into modules, steps, and scripts.","source":"@site/docs/phlow-structure/introduction.md","sourceDirName":"phlow-structure","slug":"/phlow-structure/introduction","permalink":"/docs/phlow-structure/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/phlow-structure/introduction.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Introduction","hide_title":true},"sidebar":"docsSidebar","previous":{"title":"Phlow Structure","permalink":"/docs/category/phlow-structure"},"next":{"title":"Main Flow Structure (main.yaml)","permalink":"/docs/phlow-structure/main"}}');var i=t(4848),r=t(8453);const o={sidebar_position:1,title:"Introduction",hide_title:!0},a="Phlow Structure",l={},c=[{value:"Example: Student Flow",id:"example-student-flow",level:3},{value:"Flow Logic Overview",id:"flow-logic-overview",level:3},{value:"Structure Visualization",id:"structure-visualization",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"phlow-structure",children:"Phlow Structure"})}),"\n",(0,i.jsxs)(n.p,{children:["Phlow is a modular runtime for building backends, automations, and orchestrations using YAML to define ",(0,i.jsx)(n.strong,{children:"flows"}),". Each flow is descriptive and structured into ",(0,i.jsx)(n.strong,{children:"modules"}),", ",(0,i.jsx)(n.strong,{children:"steps"}),", and ",(0,i.jsx)(n.strong,{children:"scripts"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"This document covers:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Main structure (",(0,i.jsx)(n.code,{children:"main.yaml"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Modules inclusion (",(0,i.jsx)(n.code,{children:"modules.yaml"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Dynamic scripts (",(0,i.jsx)(n.code,{children:".phs"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Special commands (",(0,i.jsx)(n.code,{children:"!include"}),", ",(0,i.jsx)(n.code,{children:"!phs"}),", ",(0,i.jsx)(n.code,{children:"!import"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-student-flow",children:"Example: Student Flow"}),"\n",(0,i.jsxs)(n.p,{children:["To better understand the concepts, refer to the ",(0,i.jsx)(n.a,{href:"https://github.com/phlowdotdev/phlow/examples/students",children:"Student Flow example"}),". This example demonstrates how to implement a flow that evaluates whether someone is a student based on their age and other parameters."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"main: cli\nname: Are you a student?\nversion: 1.0.0\ndescription: Check if you are a student.\nauthor: Your Name\nmodules: !include modules.yaml\nsteps:\n  - assert: !phs main.force\n    then:\n      return: !phs `${main.name} is a student, but the age is not valid`\n    else:\n      - assert: !phs main.age < 18 && main.age > 3\n        then:\n          return: !phs `${main.name} is a student`\n      - assert: !import scripts/condition.phs\n        then:\n          return: !phs `${main.name} is not a student`\n        then:\n          return: !phs `${main.name} is not a student`\n      - assert: !phs main.age <= 3\n        then:\n          return: !phs `${main.name} is a baby`  \n      - return: !import scripts/output.phs\n"})}),"\n",(0,i.jsx)(n.h3,{id:"flow-logic-overview",children:"Flow Logic Overview"}),"\n",(0,i.jsx)(n.p,{children:'The "Are you a student?" flow operates as follows:'}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Captures CLI arguments: ",(0,i.jsx)(n.code,{children:"name"}),", ",(0,i.jsx)(n.code,{children:"age"}),", ",(0,i.jsx)(n.code,{children:"force"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"force"})," is ",(0,i.jsx)(n.code,{children:"true"}),", returns a message indicating the user is a student."]}),"\n",(0,i.jsxs)(n.li,{children:["Otherwise:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"age"})," is 18 or older, returns a message indicating the user is a student."]}),"\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"age"})," is less than 3, indicates the person is a baby."]}),"\n",(0,i.jsx)(n.li,{children:"Otherwise, returns an invalid age message."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"structure-visualization",children:"Structure Visualization"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"main.yaml\n \u251c\u2500\u2500 Header (main, name, version, etc.)\n \u251c\u2500\u2500 modules: !include modules.yaml\n \u2514\u2500\u2500 steps: conditional execution flow\n\nmodules.yaml\n \u2514\u2500\u2500 CLI arguments definition\n\nscripts/\n \u251c\u2500\u2500 condition.phs (age validation)\n \u2514\u2500\u2500 output.phs (error message)\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(6540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);