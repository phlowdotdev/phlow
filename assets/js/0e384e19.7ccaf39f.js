"use strict";(self.webpackChunkphlow_docs=self.webpackChunkphlow_docs||[]).push([[3976],{7879:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"intro","title":"Intro","description":"Modular Flow Runtime for Composable Backends","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/phlowdotdev/phlow/tree/main/docs/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Intro"},"sidebar":"docsSidebar","next":{"title":"Philosophy","permalink":"/docs/philosophy"}}');var s=n(4848),r=n(8453);const i={sidebar_position:1,title:"Intro"},l="Phlow",a={},c=[{value:"Modular Flow Runtime for Composable Backends",id:"modular-flow-runtime-for-composable-backends",level:2}];function d(e){const o={h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("p",{align:"center",children:(0,s.jsx)("img",{src:"/img/logo.svg",alt:"Phlow logo",width:"160"})}),"\n",(0,s.jsx)(o.header,{children:(0,s.jsx)(o.h1,{id:"phlow",children:"Phlow"})}),"\n",(0,s.jsx)(o.h2,{id:"modular-flow-runtime-for-composable-backends",children:"Modular Flow Runtime for Composable Backends"}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.strong,{children:"Phlow"})," is a ",(0,s.jsx)(o.strong,{children:"high-performance, scalable, and Low Code flow runtime"})," built with Rust \u2014 designed to revolutionize the way you build backends. With Phlow, you can ",(0,s.jsx)(o.strong,{children:"create APIs, automations, and event-driven systems using just YAML"}),", composing logic like building blocks."]}),"\n",(0,s.jsxs)(o.p,{children:["Thanks to its modular architecture and clear separation between control and behavior, Phlow lets you ",(0,s.jsx)(o.strong,{children:"orchestrate complex flows without coding"})," \u2014 and when you need extra power, simply ",(0,s.jsx)(o.strong,{children:"plug in lightweight scripts or Rust modules"}),"."]}),"\n",(0,s.jsxs)(o.p,{children:["It comes with ",(0,s.jsx)(o.strong,{children:"built-in observability powered by OpenTelemetry"}),", giving you full visibility into your flows, modules, and executions. Easily export traces and metrics to ",(0,s.jsx)(o.strong,{children:"Jaeger"}),", ",(0,s.jsx)(o.strong,{children:"Grafana Tempo"}),", or ",(0,s.jsx)(o.strong,{children:"AWS X-Ray"}),", all with simple environment variables."]}),"\n",(0,s.jsxs)(o.p,{children:["If you're looking for speed, flexibility, and full insight into your backend \u2014 ",(0,s.jsx)(o.strong,{children:"Phlow is the Low-Code revolution you\u2019ve been waiting for"}),"."]})]})}function h(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>i,x:()=>l});var t=n(6540);const s={},r=t.createContext(s);function i(e){const o=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:o},e.children)}}}]);