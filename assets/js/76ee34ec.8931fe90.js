"use strict";(self.webpackChunkphlow_docs=self.webpackChunkphlow_docs||[]).push([[6911],{5290:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"phlow-structure/steps","title":"Steps","description":"Steps control the logic and flow of execution.","source":"@site/docs/phlow-structure/steps.md","sourceDirName":"phlow-structure","slug":"/phlow-structure/steps","permalink":"/docs/phlow-structure/steps","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/phlow-structure/steps.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Steps"},"sidebar":"docsSidebar","previous":{"title":"Modules (modules.yaml)","permalink":"/docs/phlow-structure/modules"},"next":{"title":"Special Directives","permalink":"/docs/phlow-structure/directives"}}');var a=n(4848),r=n(8453);const l={sidebar_position:4,title:"Steps"},i=void 0,o={},d=[{value:"All Elements",id:"all-elements",level:2},{value:"id",id:"id",level:3},{value:"label",id:"label",level:3},{value:"assert",id:"assert",level:3},{value:"payload",id:"payload",level:3},{value:"use",id:"use",level:3},{value:"to",id:"to",level:3},{value:"steps",id:"steps",level:3},{value:"return",id:"return",level:3}];function c(e){const s={br:"br",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.p,{children:"Steps control the logic and flow of execution."}),"\n",(0,a.jsx)(s.p,{children:"Example:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"steps:\n  - assert: !phs main.force\n    then:\n      return: !phs `${main.name} is a student, but the age is not valid`\n    else:\n      # Additional conditional steps\n"})}),"\n",(0,a.jsx)(s.p,{children:"Each step may have:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"assert"}),": Evaluates a condition."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"then"}),": Executes if the assertion is true."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"else"}),": Executes if the assertion is false."]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"all-elements",children:"All Elements"}),"\n",(0,a.jsx)(s.h3,{id:"id",children:"id"}),"\n",(0,a.jsxs)(s.p,{children:["A unique identifier for the step, used for tracking or referencing. This allows the step's output to be accessed using the ",(0,a.jsx)(s.code,{children:"steps"})," variable. For example:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"steps:\n  - id: my_step\n    payload:\n      key: value\n  - assert: !phs steps.my_step.payload.key == 'value'\n    then:\n      return: !phs `Step ID is valid and payload key matches`\n"})}),"\n",(0,a.jsx)(s.h3,{id:"label",children:"label"}),"\n",(0,a.jsx)(s.p,{children:"A descriptive label for the step, often used as the span name in OpenTelemetry for tracing and monitoring purposes. This label helps in identifying and analyzing the step during distributed tracing. For example:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"steps:\n  - label: Validate User Age\n    assert: !phs main.age > 18\n    then:\n      return: !phs `User is an adult`\n    else:\n      return: !phs `User is underage`\n"})}),"\n",(0,a.jsx)(s.h3,{id:"assert",children:"assert"}),"\n",(0,a.jsxs)(s.p,{children:["Evaluates a boolean expression to control the flow. If the ",(0,a.jsx)(s.code,{children:"assert"})," is true, it executes the ",(0,a.jsx)(s.code,{children:"then"})," block. If false, it executes the ",(0,a.jsx)(s.code,{children:"else"})," block, if defined. If the ",(0,a.jsx)(s.code,{children:"else"})," block is not present, the flow proceeds to the next step. For example:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"steps:\n  - assert: !phs main.age > 18\n    then:\n      return: !phs `User is an adult`\n    else:\n      return: !phs `User is underage`\n"})}),"\n",(0,a.jsx)(s.h3,{id:"payload",children:"payload"}),"\n",(0,a.jsxs)(s.p,{children:["Represents the data that the step sends forward and can also receive from the previous step. By declaring ",(0,a.jsx)(s.code,{children:"payload"}),", you define the data to be passed to the next step. The subsequent step can capture it using ",(0,a.jsx)(s.code,{children:"!phs payload"}),". For example:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"steps:\n  - payload:\n      key: value\n  - assert: !phs payload.key == 'value'\n    then:\n      return: !phs `Payload key is valid`\n"})}),"\n",(0,a.jsx)(s.h3,{id:"use",children:"use"}),"\n",(0,a.jsx)(s.p,{children:"Specifies the context in which the step is executed. This is used to invoke specific modules that perform specialized tasks, such as logging, producing messages to an AMQP queue, querying a database, or other operations that are not part of the main context."}),"\n",(0,a.jsx)(s.p,{children:"For example:"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)(s.strong,{children:["Using the ",(0,a.jsx)(s.code,{children:"log"})," module"]}),":",(0,a.jsx)(s.br,{}),"\n","Logs a message for tracing or debugging purposes."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"steps:\n  - use: log\n    input:\n      message: !phs `Logging a message for tracing`\n"})}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)(s.strong,{children:["Using the ",(0,a.jsx)(s.code,{children:"producer"})," module"]}),":",(0,a.jsx)(s.br,{}),"\n","Sends a message to an AMQP queue."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:'steps:\n  - use: producer\n    input:\n      queue: "task_queue"\n      message: "Task data to process"\n'})}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)(s.strong,{children:["Using the ",(0,a.jsx)(s.code,{children:"query"})," module"]}),":",(0,a.jsx)(s.br,{}),"\n","Executes a SQL query on a PostgreSQL database."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:'steps:\n  - use: postgres\n    input:\n      query: "SELECT * FROM users WHERE active = true"\n'})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"to",children:"to"}),"\n",(0,a.jsx)(s.p,{children:"The to represents the ID of a step that is identified as the next step to be executed in sequence, effectively linking the current step to the subsequent one."}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"steps:\n  - to: step4\n  - id: step2\n    payload: !phs payload + 1\n  - assert: !phs payload == 2\n    then:\n      return: !phs `Payload is 2`\n    else:\n      return: !phs `Payload is not 2`\n  - id: step3\n    payload: 1\n    to: step2\n"})}),"\n",(0,a.jsx)(s.h3,{id:"steps",children:"steps"}),"\n",(0,a.jsxs)(s.p,{children:["It is possible to use ",(0,a.jsx)(s.code,{children:"steps"})," to execute a sequence of steps within the context of another step. This is particularly useful in scenarios where you want to define additional logic inside ",(0,a.jsx)(s.code,{children:"then"})," or ",(0,a.jsx)(s.code,{children:"else"})," blocks. For example:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:'steps:\n  - assert: !phs main.age > 18\n    then:\n      label: Check Adult Status\n      steps:\n        - use: log\n          input:\n            message: "User is an adult"\n        - return: !phs `User is an adult`\n    else:\n      label: Check Underage Status\n      steps:\n        - use: log\n          input:\n            message: "User is underage"\n        - return: !phs `User is underage`\n'})}),"\n",(0,a.jsx)(s.h3,{id:"return",children:"return"}),"\n",(0,a.jsxs)(s.p,{children:["Similar to the ",(0,a.jsx)(s.code,{children:"return"})," statement in any programming language, it halts the flow of execution and returns the specified data to the main context. For example:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"steps:\n  - assert: !phs main.age > 18\n    then:\n      return: !phs `User is an adult`\n    else:\n      return: !phs `User is underage`\n"})})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>i});var t=n(6540);const a={},r=t.createContext(a);function l(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);